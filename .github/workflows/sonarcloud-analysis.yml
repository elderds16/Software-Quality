name: SonarQube Analysis

on:
  push:
    branches:
      - main  # of de branch waarop je de analyse wilt uitvoeren

jobs:
  sonarcloud:
    name: Run SonarQube Scanner
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'  # de versie die je nodig hebt voor je project
        distribution: 'microsoft'  # specificeer de distributie, bijvoorbeeld 'adoptopenjdk'

    - name: Cache SonarQube Scanner
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar-${{ hashFiles('**/sonar-project.properties') }}
        restore-keys: |
          ${{ runner.os }}-sonar-

    - name: Install SonarScanner
      run: |
        curl -sSLo sonar-scanner.zip https://github.com/SonarSource/sonar-scanner-cli/releases/download/4.7.0.2747/sonar-scanner-4.7.0.2747-linux.zip
        unzip sonar-scanner.zip -d $HOME
        export PATH=$HOME/sonar-scanner-4.7.0.2747-linux/bin:$PATH

    - name: Run SonarScanner
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}  # Voeg je eigen project key toe aan de secrets
        SONAR_ORG_KEY: ${{ secrets.SONAR_ORG_KEY }}  # Voeg je organisatie key toe aan de secrets
      run: |
        sonar-scanner \
          -Dsonar.projectKey=$SONAR_PROJECT_KEY \
          -Dsonar.organization=$SONAR_ORG_KEY \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=$SONAR_TOKEN
